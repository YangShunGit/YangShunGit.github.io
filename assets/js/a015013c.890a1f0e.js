"use strict";(self.webpackChunkys_blog=self.webpackChunkys_blog||[]).push([[8605],{8453:(n,e,d)=>{d.d(e,{R:()=>i,x:()=>l});var o=d(6540);const t={},r=o.createContext(t);function i(n){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),o.createElement(r.Provider,{value:e},n.children)}},9068:(n,e,d)=>{d.r(e),d.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>i,metadata:()=>o,toc:()=>s});const o=JSON.parse('{"id":"\u6e90\u7801\u5206\u6790/React/Diff\u7b97\u6cd5","title":"react diff\u7b97\u6cd5","description":"\u6838\u5fc3\u4f18\u5316\u7b56\u7565","source":"@site/frontend/\u6e90\u7801\u5206\u6790/React/Diff\u7b97\u6cd5.md","sourceDirName":"\u6e90\u7801\u5206\u6790/React","slug":"/\u6e90\u7801\u5206\u6790/React/Diff\u7b97\u6cd5","permalink":"/frontend/\u6e90\u7801\u5206\u6790/React/Diff\u7b97\u6cd5","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/frontend/\u6e90\u7801\u5206\u6790/React/Diff\u7b97\u6cd5.md","tags":[],"version":"current","frontMatter":{},"sidebar":"frontend","previous":{"title":"webpack\u57fa\u7840\u914d\u7f6e","permalink":"/frontend/\u6784\u5efa\u5de5\u5177/webpack/webpack\u57fa\u7840\u914d\u7f6e"},"next":{"title":"fiber\u67b6\u6784","permalink":"/frontend/\u6e90\u7801\u5206\u6790/React/Fiber\u67b6\u6784"}}');var t=d(4848),r=d(8453);const i={},l="react diff\u7b97\u6cd5",c={},s=[{value:"\u6838\u5fc3\u4f18\u5316\u7b56\u7565",id:"\u6838\u5fc3\u4f18\u5316\u7b56\u7565",level:2},{value:"\u5b9e\u73b0\u7b80\u6613diff\u6a21\u578b",id:"\u5b9e\u73b0\u7b80\u6613diff\u6a21\u578b",level:2}];function p(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",pre:"pre",...(0,r.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"react-diff\u7b97\u6cd5",children:"react diff\u7b97\u6cd5"})}),"\n",(0,t.jsx)(e.h2,{id:"\u6838\u5fc3\u4f18\u5316\u7b56\u7565",children:"\u6838\u5fc3\u4f18\u5316\u7b56\u7565"}),"\n",(0,t.jsxs)(e.ol,{children:["\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"\u6811\u6bd4\u8f83\u7b56\u7565"}),"\uff1a\nReact \u5bf9\u6811\u8fdb\u884c\u5206\u5c42\u6bd4\u8f83\uff0c\u4e0d\u4f1a\u8de8\u5c42\u7ea7\u79fb\u52a8\u8282\u70b9;\n\u5f53\u53d1\u73b0\u4e24\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\u65f6\uff0c\u4f1a\u76f4\u63a5\u9500\u6bc1\u65e7\u5143\u7d20\u5e76\u521b\u5efa\u65b0\u5143\u7d20."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"\u7ec4\u4ef6\u6bd4\u8f83\u7b56\u7565"}),"\uff1a\n\u5bf9\u4e8e\u540c\u4e00\u7c7b\u578b\u7684\u7ec4\u4ef6\uff0c\u4fdd\u6301\u5b9e\u4f8b\u4e0d\u53d8\uff0c\u53ea\u66f4\u65b0 props \u548c state;\n\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u7ec4\u4ef6\uff0c\u76f4\u63a5\u9500\u6bc1\u65e7\u7ec4\u4ef6\uff0c\u521b\u5efa\u65b0\u7ec4\u4ef6."]}),"\n",(0,t.jsxs)(e.li,{children:[(0,t.jsx)(e.code,{children:"\u5143\u7d20\u6bd4\u8f83\u7b56\u7565"}),"\uff1a\n\u5bf9\u4e8e\u5217\u8868\u5143\u7d20\uff0cReact \u9ed8\u8ba4\u6309\u987a\u5e8f\u6bd4\u8f83;\n\u5f53\u5143\u7d20\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u8fd9\u79cd\u6bd4\u8f83\u4f1a\u5bfc\u81f4\u6027\u80fd\u95ee\u9898;\n\u901a\u8fc7\u63d0\u4f9b\u552f\u4e00\u7684 key \u5c5e\u6027\uff0cReact \u53ef\u4ee5\u8bc6\u522b\u6bcf\u4e2a\u5143\u7d20\uff0c\u53ea\u79fb\u52a8\u9700\u8981\u79fb\u52a8\u7684\u5143\u7d20."]}),"\n"]}),"\n",(0,t.jsx)(e.h2,{id:"\u5b9e\u73b0\u7b80\u6613diff\u6a21\u578b",children:"\u5b9e\u73b0\u7b80\u6613diff\u6a21\u578b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-js",children:"// \u865a\u62df DOM \u8282\u70b9\u7c7b\u578b\nclass VNode {\n  constructor(type, props, children) {\n    this.type = type;\n    this.props = props || {};\n    this.children = children || [];\n  }\n}\n\n// \u521b\u5efa\u865a\u62df DOM \u8282\u70b9\u7684\u8f85\u52a9\u51fd\u6570\nfunction createElement(type, props, ...children) {\n  return new VNode(type, props, children);\n}\n\n// \u7b80\u6613\u7684 Diff \u7b97\u6cd5\u5b9e\u73b0\nfunction diff(oldNode, newNode, parentDOM) {\n  // \u60c5\u51b5 1: \u65e7\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u521b\u5efa\u65b0\u8282\u70b9\n  if (!oldNode) {\n    const newDOM = createDOM(newNode);\n    parentDOM.appendChild(newDOM);\n    return newDOM;\n  }\n\n  // \u60c5\u51b5 2: \u65b0\u8282\u70b9\u4e0d\u5b58\u5728\uff0c\u5220\u9664\u65e7\u8282\u70b9\n  if (!newNode) {\n    parentDOM.removeChild(oldNode.dom);\n    return null;\n  }\n\n  // \u60c5\u51b5 3: \u8282\u70b9\u7c7b\u578b\u4e0d\u540c\uff0c\u66ff\u6362\u65e7\u8282\u70b9\n  if (oldNode.type !== newNode.type) {\n    const newDOM = createDOM(newNode);\n    parentDOM.replaceChild(newDOM, oldNode.dom);\n    return newDOM;\n  }\n\n  // \u60c5\u51b5 4: \u8282\u70b9\u7c7b\u578b\u76f8\u540c\uff0c\u66f4\u65b0\u5c5e\u6027\n  if (typeof oldNode.type === 'string') {\n    updateDOMProperties(oldNode.dom, oldNode.props, newNode.props);\n  }\n\n  // \u60c5\u51b5 5: \u7ec4\u4ef6\u7c7b\u578b\u76f8\u540c\uff0c\u66f4\u65b0\u7ec4\u4ef6\n  else {\n    // \u5bf9\u4e8e\u7ec4\u4ef6\uff0c\u8fd9\u91cc\u5e94\u8be5\u8c03\u7528\u7ec4\u4ef6\u7684\u66f4\u65b0\u65b9\u6cd5\n    // \u7b80\u5316\u5904\u7406\uff0c\u5047\u8bbe\u7ec4\u4ef6\u4f1a\u81ea\u5df1\u66f4\u65b0\n  }\n\n  // \u6bd4\u8f83\u5b50\u8282\u70b9\n  updateChildren(oldNode.children, newNode.children, oldNode.dom);\n\n  // \u66f4\u65b0\u65e7\u8282\u70b9\u7684\u5f15\u7528\n  oldNode.props = newNode.props;\n  oldNode.children = newNode.children;\n  \n  return oldNode.dom;\n}\n\n// \u66f4\u65b0\u5b50\u8282\u70b9\nfunction updateChildren(oldChildren, newChildren, parentDOM) {\n  // \u521b\u5efa\u65e7\u5b50\u8282\u70b9\u7684 key \u5230\u7d22\u5f15\u7684\u6620\u5c04\n  const keyToIndexMap = {};\n  oldChildren.forEach((child, index) => {\n    if (child.props.key) {\n      keyToIndexMap[child.props.key] = index;\n    }\n  });\n\n  // \u904d\u5386\u65b0\u5b50\u8282\u70b9\uff0c\u8fdb\u884c\u66f4\u65b0\n  newChildren.forEach((newChild, newIndex) => {\n    const key = newChild.props.key;\n    \n    // \u5982\u679c\u6709 key\uff0c\u67e5\u627e\u5bf9\u5e94\u7684\u65e7\u5b50\u8282\u70b9\n    if (key) {\n      const oldIndex = keyToIndexMap[key];\n      if (oldIndex !== undefined) {\n        const oldChild = oldChildren[oldIndex];\n        // \u79fb\u52a8\u8282\u70b9\u5230\u6b63\u786e\u4f4d\u7f6e\n        if (oldIndex !== newIndex) {\n          parentDOM.insertBefore(oldChild.dom, parentDOM.childNodes[newIndex] || null);\n          // \u66f4\u65b0\u65e7\u5b50\u8282\u70b9\u6570\u7ec4\n          oldChildren.splice(oldIndex, 1);\n          oldChildren.splice(newIndex, 0, oldChild);\n        }\n        // \u9012\u5f52\u6bd4\u8f83\n        diff(oldChild, newChild, parentDOM);\n      } else {\n        // \u65b0\u8282\u70b9\uff0c\u521b\u5efa\u5e76\u63d2\u5165\n        const newDOM = createDOM(newChild);\n        parentDOM.insertBefore(newDOM, parentDOM.childNodes[newIndex] || null);\n      }\n    } else {\n      // \u6ca1\u6709 key\uff0c\u6309\u987a\u5e8f\u6bd4\u8f83\n      const oldChild = oldChildren[newIndex];\n      if (oldChild) {\n        diff(oldChild, newChild, parentDOM);\n      } else {\n        // \u65b0\u8282\u70b9\uff0c\u521b\u5efa\u5e76\u63d2\u5165\n        const newDOM = createDOM(newChild);\n        parentDOM.appendChild(newDOM);\n      }\n    }\n  });\n\n  // \u5220\u9664\u591a\u4f59\u7684\u65e7\u8282\u70b9\n  while (oldChildren.length > newChildren.length) {\n    const oldChild = oldChildren.pop();\n    parentDOM.removeChild(oldChild.dom);\n  }\n}\n\n// \u521b\u5efa\u771f\u5b9e DOM\nfunction createDOM(vnode) {\n  let dom;\n  \n  if (typeof vnode.type === 'string') {\n    // \u521b\u5efa\u5143\u7d20\u8282\u70b9\n    dom = document.createElement(vnode.type);\n    \n    // \u8bbe\u7f6e\u5c5e\u6027\n    for (const [key, value] of Object.entries(vnode.props)) {\n      if (key === 'key') continue;\n      if (key === 'children') continue;\n      dom[key] = value;\n    }\n    \n    // \u6dfb\u52a0\u5b50\u8282\u70b9\n    vnode.children.forEach(child => {\n      if (typeof child === 'string') {\n        dom.appendChild(document.createTextNode(child));\n      } else {\n        dom.appendChild(createDOM(child));\n      }\n    });\n  } else {\n    // \u7ec4\u4ef6\u8282\u70b9 - \u7b80\u5316\u5904\u7406\n    dom = document.createElement('div');\n  }\n  \n  // \u5b58\u50a8\u771f\u5b9e DOM \u5f15\u7528\n  vnode.dom = dom;\n  return dom;\n}\n\n// \u66f4\u65b0 DOM \u5c5e\u6027\nfunction updateDOMProperties(dom, oldProps, newProps) {\n  // \u79fb\u9664\u65e7\u5c5e\u6027\n  for (const [key, value] of Object.entries(oldProps)) {\n    if (key === 'key') continue;\n    if (key === 'children') continue;\n    if (!(key in newProps)) {\n      dom[key] = null;\n    }\n  }\n  \n  // \u6dfb\u52a0/\u66f4\u65b0\u65b0\u5c5e\u6027\n  for (const [key, value] of Object.entries(newProps)) {\n    if (key === 'key') continue;\n    if (key === 'children') continue;\n    dom[key] = value;\n  }\n}\n\n"})})]})}function a(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}}}]);